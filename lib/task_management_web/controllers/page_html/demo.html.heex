<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Trello Clone</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.js"></script>
</head>
<body class="bg-gray-100">
  <div class="container mx-auto py-8">
    <div class="flex columns">
      <div id="todo-list" class="column list-container bg-white rounded-lg shadow-md mr-4" draggable="true">
        <div class="px-4 py-2 bg-gray-200 text-gray-700 font-semibold">To Do</div>
        <div class="p-4" id="todo-items">
          <div class="task-item bg-gray-100 p-2 rounded-md mb-2" data-id="1">Task 1</div>
          <div class="task-item bg-gray-100 p-2 rounded-md mb-2" data-id="2">Task 2</div>
          <div class="task-item bg-gray-100 p-2 rounded-md mb-2" data-id="3">Task 3</div>
        </div>
        <div class="p-4">
          <button class="add-task-todo bg-blue-500 text-white px-4 py-2 rounded-md">Add Task</button>
        </div>
      </div>

      <!-- Other lists go here -->

      <div id="add-column" class="w-72 list-container bg-white rounded-lg shadow-md">
        <div class="p-4">
          <button class="bg-green-500 text-white px-4 py-2 rounded-md">Add Column</button>
        </div>
      </div>
    </div>
  </div>

  <script>
    function createNewColumn() {
      const newColumn = document.createElement('div');
      newColumn.draggable = true;
      newColumn.classList.add('column', 'list-container', 'w-1/4', 'bg-white', 'rounded-lg', 'shadow-md', 'mr-4');
      newColumn.innerHTML = `
        <input type="text" class="column-title-input px-4 py-2 bg-gray-200 text-gray-700 font-semibold w-full rounded-t-lg focus:outline-none" placeholder="Enter column title...">
        <div class="p-4" id="new-column-items">
          <!-- List Items -->
        </div>
        <div class="p-4">
          <button class="add-task-button bg-blue-500 text-white px-4 py-2 rounded-md">Add Task</button>
        </div>
      `;
      
      const columnsContainer = document.querySelector('.flex');
      columnsContainer.insertBefore(newColumn, addColumnBtn);

      const inputField = newColumn.querySelector('.column-title-input');
      inputField.focus();

      inputField.addEventListener('keypress', function(event) {
        if (event.key === 'Enter') {
          inputField.blur();
        }
      });

      inputField.addEventListener('blur', function() {
        const inputValue = inputField.value.trim();
        if (inputValue === '') {
          newColumn.remove();
        } else {
          const columnTitle = document.createElement('div');
          columnTitle.textContent = inputValue;
          columnTitle.classList.add('px-4', 'py-2', 'bg-gray-200', 'text-gray-700', 'font-semibold');
          newColumn.replaceChild(columnTitle, inputField);
        }
      });

      const addTaskBtn = newColumn.querySelector('.add-task-button');
      addTaskBtn.addEventListener('click', function() {
        const taskInput = document.createElement('input');
        taskInput.classList.add('task-input', 'block', 'w-full', 'px-4', 'py-2', 'bg-gray-100', 'rounded-md', 'mb-2', 'focus:outline-none');
        taskInput.placeholder = 'Enter task...';
        const taskContainer = newColumn.querySelector('#new-column-items');
        taskContainer.appendChild(taskInput);
        taskInput.focus();
      });
    }

        // Initialize Sortable.js for Todo list
    new Sortable(document.getElementById('todo-items'), {
      group: 'shared',
      animation: 150,
      onEnd: function(evt) {
        console.log('Element was moved:', evt.item);
      }
    });

    const addColumnBtn = document.getElementById('add-column');
    addColumnBtn.addEventListener('click', createNewColumn);

    // Get all columns
    const columns = document.querySelectorAll('.column');

    let draggedColumn = null;

    // Add drag and drop events to each column
    columns.forEach(column => {
        column.addEventListener('dragstart', (event) => {
            draggedColumn = event.target;
            setTimeout(() => {
                event.target.style.display = 'none';
            }, 0);
        });

        column.addEventListener('dragend', () => {
            draggedColumn.style.display = 'block';
            draggedColumn = null;
        });

        column.addEventListener('dragover', (event) => {
            event.preventDefault();
        });

        column.addEventListener('drop', (event) => {
            event.preventDefault();
            if (draggedColumn) {
                // Rearrange columns based on drop position
                const columnsContainer = document.querySelector('.flex');
                const columnsArray = Array.from(columnsContainer.children);
                const indexToInsert = columnsArray.indexOf(event.target);

                if (indexToInsert !== -1) {
                    columnsContainer.insertBefore(draggedColumn, columnsArray[indexToInsert]);
                }
            }
        });
    });

  </script>

</body>
</html>
